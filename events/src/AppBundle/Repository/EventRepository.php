<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventRepository extends EntityRepository
{

    /**
     * Loads the user for the given username.
     * This method must return null if the user is not found.
     *
     * @param string $username The username
     * @return UserInterface|null
     */
    public function findEventsByCommunityId($communityId)
    {
        // TODO: Implement loadUserByUsername() method.
        return $this->createQueryBuilder('event')
            ->join('event.communityUser', 'communityUser')
            ->join('communityUser.community', 'community')
            ->where('community.id = :communityId')
            ->setParameter('communityId', intval($communityId))
            ->getQuery()
            ->getResult();
    }


    /**
     * Loads the user for the given username.
     * This method must return null if the user is not found.
     *
     * @param string $username The username
     * @return UserInterface|null
     */
    public function findEventsByCommunityIdList($communityIdList)
    {
        // TODO: Implement loadUserByUsername() method.
        return $this->createQueryBuilder('event')
            ->join('event.communityUser', 'communityUser')
            ->innerJoin('communityUser.community', 'community')
            ->where('community.id IN (:communityIdList)')
            ->setParameter('communityIdList', $communityIdList)
            ->getQuery()
            ->getResult();
    }

}
